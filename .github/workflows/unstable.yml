name: Unstable Build

on:
  pull_request:
  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      base: unstable
      date: unstable-${{ steps.date.outputs.date }}
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +%F)"

  base:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/s390x
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          push: true
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
          context: ./base
          tags: |
            ${{ secrets.TARGET_REPO }}/base:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/base:${{ needs.version.outputs.date }}
          build-args: |
            JITSI_RELEASE=unstable
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Dryrun
        uses: docker/build-push-action@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          context: ./base
          tags: |
            ${{ secrets.TARGET_REPO }}/base:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/base:${{ needs.version.outputs.date }}
          build-args: |
            JITSI_RELEASE=unstable
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max

  base-java:
    runs-on: ubuntu-latest
    needs: [version, base]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/s390x
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          push: true
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
          context: ./base-java
          tags: |
            ${{ secrets.TARGET_REPO }}/base-java:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/base-java:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=${{ secrets.TARGET_REPO }}
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Dryrun
        uses: docker/build-push-action@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          context: ./base-java
          tags: |
            ${{ secrets.TARGET_REPO }}/base-java:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/base-java:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=jitsi
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max

  jibri:
    runs-on: ubuntu-latest
    needs: [version, base-java]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/s390x
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          push: true
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
          context: ./jibri
          tags: |
            ${{ secrets.TARGET_REPO }}/jibri:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/jibri:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=${{ secrets.TARGET_REPO }}
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Dryrun
        uses: docker/build-push-action@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          context: ./jibri
          tags: |
            ${{ secrets.TARGET_REPO }}/jibri:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/jibri:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=jitsi
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max

  jicofo:
    runs-on: ubuntu-latest
    needs: [version, base-java]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/s390x
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          push: true
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
          context: ./jicofo
          tags: |
            ${{ secrets.TARGET_REPO }}/jicofo:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/jicofo:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=${{ secrets.TARGET_REPO }}
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Dryrun
        uses: docker/build-push-action@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          context: ./jicofo
          tags: |
            ${{ secrets.TARGET_REPO }}/jicofo:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/jicofo:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=jitsi
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max

  jigasi:
    runs-on: ubuntu-latest
    needs: [version, base-java]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/s390x
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          push: true
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
          context: ./jigasi
          tags: |
            ${{ secrets.TARGET_REPO }}/jigasi:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/jigasi:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=${{ secrets.TARGET_REPO }}
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Dryrun
        uses: docker/build-push-action@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          context: ./jigasi
          tags: |
            ${{ secrets.TARGET_REPO }}/jigasi:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/jigasi:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=jitsi
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max

  jvb:
    runs-on: ubuntu-latest
    needs: [version, base-java]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/s390x
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          push: true
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
          context: ./jvb
          tags: |
            ${{ secrets.TARGET_REPO }}/jvb:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/jvb:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=${{ secrets.TARGET_REPO }}
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Dryrun
        uses: docker/build-push-action@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          context: ./jvb
          tags: |
            ${{ secrets.TARGET_REPO }}/jvb:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/jvb:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=jitsi
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max

  prosody:
    runs-on: ubuntu-latest
    needs: [version, base]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/s390x
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          push: true
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
          context: ./prosody
          tags: |
            ${{ secrets.TARGET_REPO }}/prosody:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/prosody:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=${{ secrets.TARGET_REPO }}
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Dryrun
        uses: docker/build-push-action@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          context: ./prosody
          tags: |
            ${{ secrets.TARGET_REPO }}/prosody:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/prosody:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=jitsi
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max

  web:
    runs-on: ubuntu-latest
    needs: [version, base]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: linux/amd64,linux/s390x
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          push: true
          secrets: |
            "github_token=${{ secrets.GITHUB_TOKEN }}"
          context: ./web
          tags: |
            ${{ secrets.TARGET_REPO }}/web:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/web:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=${{ secrets.TARGET_REPO }}
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Dryrun
        uses: docker/build-push-action@v2
        if: ${{ github.event_name == 'pull_request' }}
        with:
          context: ./web
          tags: |
            ${{ secrets.TARGET_REPO }}/web:${{ needs.version.outputs.base }}
            ${{ secrets.TARGET_REPO }}/web:${{ needs.version.outputs.date }}
          build-args: |
            TARGET_REPO=jitsi
            BASE_TAG=${{ needs.version.outputs.base }}
          platforms: linux/amd64,linux/s390x
          cache-from: type=gha
          cache-to: type=gha,mode=max
